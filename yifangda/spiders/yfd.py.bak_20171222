#!/usr/bin/env python
# -*- coding: utf-8 -*-
import scrapy
from scrapy.loader import ItemLoader
from yifangda.items import YifangdaItem


class YifangdaSpider(scrapy.Spider):
    name = 'yfd'

    def start_requests(self):
        #pages = 4883
        pages = 4883
        for id in range(1, pages + 1):
            page_url = 'http://www.yyzs.net/zhaoshang/default.aspx?page=%s' % id
            yield scrapy.Request(url=page_url, callback=self.parse)

    def parse(self, response):
        for product_html in response.css('table[id=alternativeTable] a.chanpin::attr(href)').extract():
	    product_res_url = "http://www.yyzs.net/zhaoshang/" + product_html
            yield scrapy.Request(url=product_res_url, callback=self.parse_question)

    def parse_question(self, response):
	product_url = response.url
	product_name = response.css('dl.cp-xx span[id=lbl_shangbiaoming]::text').extract()
	product_tag = response.css('dl.cp-xx span[id=lbl_otc]::text').extract()
	product_point = response.css('dl.cp-xx span[id=lbl_ys]::text').extract()
	investment_area = response.css('dl.cp-xx span[id=lbl_shengfen]::text').extract()
	product_category = response.css('dl.cp-xx span[id=lbl_xiaolei]::text').extract()
	approval_number = response.css('dl.cp-xx span[id=lbl_pzwh]::text').extract()
	manufacture_factory = response.css('dl.cp-xx span[id=lbl_scdw]::text').extract()
	product_pack = response.css('dl.cp-xx span[id=lbl_baoz]::text').extract()
	product_specifications = response.css('dl.cp-xx span[id=lbl_guige]::text').extract()
	product_ingredients = response.css('dl.cp-xx span[id=lbl_chengfen]::text').extract()
	product_usage = response.css('dl.cp-xx span[id=lbl_yfyl]::text').extract()

	product_function = response.css('div[id=tabbox] span[id=lbl_xingneng]::text').extract()

	telphone = response.css('div.zuo-down span[id=lbl_phone]::text').extract()
	mobilephone = response.css('div.zuo-down span[id=lbl_mobile]::text').extract()
	fax = response.css('div.zuo-down span[id=lbl_fax]::text').extract()
	# 联系人有两种类型（lbl_lianxiren和lblPerson）
	contact_name01 = response.css('div.zuo-down span[id=lbl_lianxiren]::text').extract()
	contact_name02 = response.css('div.zuo-down span[id=lbl_lblPerson]::text').extract()
	if contact_name01:
	    contact_name = contact_name01
	elif contact_name02:
	    contact_name = contact_name02
	else:
	    contact_name = 0
	# QQ有两种类型（lbl_QQ和lblQQ）
	qq01 = response.css('div.zuo-down span[id=lbl_QQ] a::text').extract()
	qq02 = response.css('div.zuo-down span[id=lblQQ] a::text').extract()
	if qq01:
	    qq = qq01
	elif qq02:
	    qq = qq02
	else:
	    qq = 0
	wechat = response.css('div.zuo-down span[id=lbl_wx]::text').extract()
	# 网址有两种类型（lbl_wangzhi和lblWZ）
	address01 = response.css('div.zuo-down span[id=lbl_wangzhi]::text').extract()
	address02 = response.css('div.zuo-down span[id=lblWZ]::text').extract()
	if address01:
	    address = address01
	elif address02:
	    address = address02
	else:
	    address = 0
	# 邮箱有两种类型（lbl_email和lblMail）
	mail01 = response.css('div.zuo-down span[id=lbl_email]::text').extract()
	mail02 = response.css('div.zuo-down span[id=lblMail]::text').extract()
	if mail01:
	    mail = mail01
	elif mail02:
	    mail = mail02
	else:
	    mail = 0


	# 将字段和字段的值分别汇总为列表.
	key_list = ['product_url','product_name','product_tag','product_point','investment_area',
		    'product_category','approval_number','manufacture_factory','product_pack',
		    'product_specifications','product_ingredients','product_usage','product_function',
		    'telphone','mobilephone','fax','contact_name','qq','wechat','address','mail']
	value_list = [product_url,product_name,product_tag,product_point,investment_area,
		      product_category,approval_number,manufacture_factory,product_pack,
		      product_specifications,product_ingredients,product_usage,product_function,
		      telphone,mobilephone,fax,contact_name,qq,wechat,address,mail]
        # 生成ItemLoder实例
        item_list = ItemLoader(item=YifangdaItem(), response=response)
	for id in range(0, 21):
	    if value_list[id]:
		item_list.add_value(key_list[id], value_list[id])
	    else:
		item_list.add_value(key_list[id], 'None')
	# 返回数据给itemloder处理
	return item_list.load_item()
	#print item_list.load_item()
